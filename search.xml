<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>注1：格式化代码自定义初始化样式</title>
      <link href="/2019/11/27/zhu-1-ge-shi-hua-dai-ma-zi-ding-yi-chu-shi-hua-yang-shi/"/>
      <url>/2019/11/27/zhu-1-ge-shi-hua-dai-ma-zi-ding-yi-chu-shi-hua-yang-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="格式化代码-自定义初始化样式整合-format-css"><a href="#格式化代码-自定义初始化样式整合-format-css" class="headerlink" title="格式化代码/自定义初始化样式整合 format.css"></a>格式化代码/自定义初始化样式整合 format.css</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*清除内外边距,有很多元素(ul,body)是有默认内外边距样式的，但是在实际开发中，很少使用原始内外边距样式，因为会引起很多布局上面的麻烦*/</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="comment">/*maxwidth:540px;</span></span><br><span class="line"><span class="comment">    minwidth:360px;</span></span><br><span class="line"><span class="comment">    margin: 0 auto;*/</span>     </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*此格式化代码多用于移动端开发使用，控制最大的视口宽度和最小的视口宽度，同时使之整体水平居中*/</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*所有接受 &lt;'width'&gt; 和 &lt;'height'&gt; 的元素，box-sizing默认属性都是content-box（标准模式下的盒模型），而CSS3标准下的布局，一般配合boder-box(怪异模式下的盒模型)使用，可以避免padding撑大盒子、boder占用盒子外的宽度，从而优化布局*/</span></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*清除文字链接的下划线*/</span></span><br><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*清除无序列表项li标签前面的符号·*/</span></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">vertical-aline</span>: top/middle/bottom;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*改变img标签的垂直对齐方式，默认为baseline（基线对齐），这样会导致图片默认和行内元素内容的基线对齐（即使没有内容），和盒子底边有一点白色间隙，一般情况下，我们更希望图片的中线和行内元素的中线对齐，所以一般设置为middle属性*/</span></span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">outline</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">    <span class="attribute">outline</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*有表单的页面样式，在格式化的时候通常设置以上两个样式清除轮廓线和防止文本域被拖拽*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*为了有个人风格的统一样式，一般会自定义一些布局样式和外观样式的修改进行初始化*/</span></span><br><span class="line"><span class="comment">/*初始化样式 个别样例*/</span></span><br><span class="line"><span class="selector-class">.center-container</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">980</span>/<span class="number">1040px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*自定义版心样式*/</span></span><br><span class="line"><span class="selector-class">.fl</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fr</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*左右浮动引用样式*/</span></span><br><span class="line"><span class="selector-class">.content-center</span> &#123;</span><br><span class="line">    <span class="attribute">text-aline</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*使我里面的内容水平居中不仅仅是文字，块内有块，也可以用此实现里面的块水平居中效果，注：有继承性，注意是不是它所有的子元素都需要设置居中，如不是，注意使用位置，这也就是为什么版心的设置是给盒子一个宽度，使用margin:auto;而不是直接给body一个text-aline:center;的原因*/</span></span><br><span class="line"><span class="comment">/*更多补充*/</span></span><br><span class="line"><span class="selector-class">.b-shadow</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: -<span class="number">2px</span>,<span class="number">0</span>,<span class="number">3px</span>,<span class="built_in">rgba</span>(0 ,0 ,0 ,.3);<span class="comment">/*左边阴影*/</span></span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">2px</span>,<span class="number">0</span>,<span class="number">3px</span>,<span class="built_in">rgba</span>(0 ,0 ,0 ,.3);<span class="comment">/*右边阴影*/</span></span><br><span class="line">    <span class="attribute">box-shadow</span>: -<span class="number">2px</span>,<span class="number">0</span>,<span class="number">3px</span>,<span class="built_in">rgba</span>(0 ,0 ,0 ,.3),<span class="number">2px</span>,<span class="number">0</span>,<span class="number">3px</span>,<span class="built_in">rgba</span>(0 ,0 ,0 ,.3);<span class="comment">/*左右阴影*/</span></span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span>,-<span class="number">2px</span>,<span class="number">3px</span>,<span class="built_in">rgba</span>(0 ,0 ,0 ,.3);<span class="comment">/*上方阴影*/</span></span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span>,<span class="number">2px</span>,<span class="number">3px</span>,<span class="built_in">rgba</span>(0 ,0 ,0 ,.3);<span class="comment">/*下方阴影*/</span></span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span>,-<span class="number">2px</span>,<span class="number">3px</span>,<span class="built_in">rgba</span>(0 ,0 ,0 ,.3),<span class="number">0</span>,<span class="number">2px</span>,<span class="number">3px</span>,<span class="built_in">rgba</span>(0 ,0 ,0 ,.3);<span class="comment">/*上下阴影*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*盒子阴影*/</span></span><br><span class="line"><span class="selector-class">.t-shadow</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: -<span class="number">1px</span>,<span class="number">0</span>,<span class="built_in">rgba</span>(0,0,0,0.2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*文字阴影，也可以设置多重，实现各种特效字*/</span></span><br></pre></td></tr></table></figure><p>其他说明</p><p>以下为鼠标悬停的多种样式（鼠标放上面看一下效果）</p><ul>  <li style="cursor:default">我是小白</li>  <li style="cursor:pointer">我是小手</li>  <li style="cursor:move">我是移动</li>  <li style="cursor:text">我是文本</li>  <li style="cursor:not-allowed">我是禁止</li></ul><h2 id="box-sizing语法："><a href="#box-sizing语法：" class="headerlink" title="box-sizing语法："></a><strong>box-sizing</strong>语法：</h2><p><strong>box-sizing</strong>：content-box | border-box</p><p><strong>默认值</strong>：content-box</p><p><strong>适用于</strong>：所有接受 &lt;’ width’&gt; 和 &lt;’height’&gt; 的元素</p><p><strong>继承性</strong>：无</p><p><strong>动画性</strong>：否</p><p><strong>计算值</strong>：指定值</p><h2 id="取值："><a href="#取值：" class="headerlink" title="取值："></a>取值：</h2><ul><li><p>content-box：  </p><p>padding和border不被包含在定义的width和height之内。对象的实际宽度等于设置的width值和border、padding之和，即 (  Element width = width + border + padding )  </p><p>此属性表现为标准模式下的盒模型。 </p></li><li><p>border-box：  </p><p>padding和border被包含在定义的width和height之内。对象的实际宽度就等于设置的width值，即使定义有border和padding也不会改变对象的实际宽度，即  ( Element width = width )  </p><p>此属性表现为怪异模式下的盒模型。 </p></li></ul><p><strong>设置或检索对象的盒模型组成模式。</strong></p><ul><li><p><strong>标准盒模型代码与图示例:</strong></p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.test1</span>&#123;</span><br><span class="line"><span class="attribute">box-sizing</span>:content-box;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line"><span class="attribute">padding</span>:<span class="number">30px</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">15px</span> solid <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5C14046%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191115190351346.png" alt="image-20191115190351346"></p><div style="box-sizing:content-box;width:200px;height:200px;padding:30px;border:15px solid blue;margin:auto;background-color: yellow;">我是内容</div></blockquote></li><li><p><strong>怪异盒模型代码与图示例:</strong></p><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.test1</span>&#123;</span><br><span class="line"><span class="attribute">box-sizing</span>:border-box;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line"><span class="attribute">padding</span>:<span class="number">10px</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">15px</span> solid <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5C14046%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191115190414692.png" alt="image-20191115190414692"></p><div style="box-sizing:border-box;width:200px;height:200px;padding:30px;border:15px solid blue;margin:auto;background-color: yellow;">我是内容</div></blockquote></li><li><p>对应的脚本特性为<strong>boxSizing</strong>。 </p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>移动web第一天</title>
      <link href="/2019/11/27/yi-dong-web-di-yi-tian/"/>
      <url>/2019/11/27/yi-dong-web-di-yi-tian/</url>
      
        <content type="html"><![CDATA[<h2 id="移动web第一天"><a href="#移动web第一天" class="headerlink" title="移动web第一天"></a>移动web第一天</h2><h3 id="什么是HTML5？"><a href="#什么是HTML5？" class="headerlink" title="什么是HTML5？"></a>什么是HTML5？</h3><pre><code>不是一门新的语言，而是html第五次重大修改</code></pre><h3 id="html5修改了什么内容？"><a href="#html5修改了什么内容？" class="headerlink" title="html5修改了什么内容？"></a>html5修改了什么内容？</h3><pre><code>1.新增了语义化标签 2.新增了音频  视频  canvas画图3.新增input标签  新增标签表单的属性4.新增本地存储  地理定位 5.新增对类名操作 6.新增自定义属性的设置</code></pre><h4 id="语义化标签：（适用于移动端）"><a href="#语义化标签：（适用于移动端）" class="headerlink" title="语义化标签：（适用于移动端）"></a>语义化标签：（适用于移动端）</h4><pre><code>1.header 头部标签2.nav  导航标签3.article 内容标签4.section 相当于一块区域5.aside 侧边栏6.footer 尾部 7.main 主体标签</code></pre><h4 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h4><pre><code>标签： audio属性：    src： 路径    controls：控制器    autoplay:自动播放      loop:循环播放</code></pre><h3 id="视频："><a href="#视频：" class="headerlink" title="视频："></a>视频：</h3><p>​    标签  video<br>​    属性：<br>​        src： 路径<br>​        controls：控制器<br>​        autoplay:自动播放<br>​        loop:循环播放<br>​        poster：默认播放前的第一帧。<br>​        muted：静音播放<br>​        width与height  视频的宽高<br>​        等比例放大缩小（只需要设置一个即可）</p><h3 id="新增input-type属性"><a href="#新增input-type属性" class="headerlink" title="新增input  type属性"></a>新增input  type属性</h3><p>​    1.email验证邮箱<br>​    2.url：网址<br>​    3.date日期<br>​    4.month：月<br>​    5.week：周<br>​    6.number：数字<br>​    7.tel电话： 在移动端弹出数字键盘<br>​    8.search： 人性化体验<br>​    9.time：时间</p><h3 id="新增标签："><a href="#新增标签：" class="headerlink" title="新增标签："></a>新增标签：</h3><p>​    分组表单：<br>​    <fieldset align="center"><br>​         <strong>当前组的标题</strong><br>​        <legend>用户信息</legend><br>​    </fieldset><br>​    下拉列表：<br>​    input：list绑定对应的id<br>​     <input type="text" list="a"><br>​    起id名：<br>​    <datalist id="a"><br>​        <option value="张三" label="好人"></option><br>​        <option value="隔壁张三" label="大好人"></option><br>​    </datalist></p><h3 id="新增属性"><a href="#新增属性" class="headerlink" title="新增属性"></a>新增属性</h3><p>​    required： 当前项为必填、<br>​    placeholder：默认提示信息<br>​    disabled：禁用<br>​    readonly：只读（只允许读取  不允许修改）<br>​    autofocus：自动获取焦点。<br>​    autocomplete：自动提示信息    注意：  当前文本框必须拥有name属性    必须真正提交过    off（不提示）|on（提示）<br>​    multiple：多选（文件上传）   上传之后的图片存储在 files[0]</p><h3 id="Css3新增："><a href="#Css3新增：" class="headerlink" title="Css3新增："></a>Css3新增：</h3><p>​    1.选择器<br>​    2.旋转  移动  缩放 动画<br>​    3.旋转  移动  缩放（3d）更加立体</p><h3 id="选择器："><a href="#选择器：" class="headerlink" title="选择器："></a>选择器：</h3><p>   <strong>属性选择器</strong><br>        1.div[class] {<br>            color: red;<br>        }<br>        2.[class] {<br>            color: pink;<br>        }<br>        3.[class=”box”] {<br>            color: red;<br>        }<br>        4. 以b开头选中<br>                  [class^=”b”] {<br>            color: red;<br>                }<br>                5.以b结尾的选中<br>                [class$=”b”] {<br>            color: red;<br>                }<br>                6.只要包含b就会选中<br>                [class<em>=”b”] {<br>            color: red;<br>                }<br>*</em>结构伪类选择器**<br>        1).选择当前元素的父级元素的第一个li元素<br>                1.元素:first-child<br>                2.元素:last-child<br>                3.元素:nth-child(n)      -2+n 前两个孩子<br>        2).选择当前元素的父级元素的同类型第一个li元素<br>                1.元素：first-of-type<br>                2.元素：last-of-type<br>                3.元素：nth-of-type(n)<br><strong>兄弟选择器</strong><br>        1).选择当前元素的后一个兄弟元素<br>                元素+元素<br>        2).选择当前元素的后面的所有兄弟元素<br>                元素~元素<br><strong>伪元素</strong><br>        元素::before  在元素里面的最前面添加内容<br>        元素::after   在元素里面的最后面添加内容<br>                注意：<br>            1.表单元素无法添加伪元素<br>            2.用伪元素添加之后是行内元素<br>            3.必须有content;</p><p>扩展：<br>    1.选中当前元素的第一行：<br>        div::first-line {<br>            color: red;<br>        }<br>    2.选中当前元素的第一个字：<br>        div::first-letter {<br>            color: red;<br>        }<br>    3.鼠标选中的状态：<br>        div::selection {<br>            color: red;<br>            background: blue;<br>        } </p><p>​    </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>小特效-背景渐变色</title>
      <link href="/2019/11/27/xiao-te-xiao-bei-jing-jian-bian-se/"/>
      <url>/2019/11/27/xiao-te-xiao-bei-jing-jian-bian-se/</url>
      
        <content type="html"><![CDATA[<h1 id="渐变色设置"><a href="#渐变色设置" class="headerlink" title="渐变色设置"></a>渐变色设置</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">直接设置背景颜色为红色</span><br><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">red</span>; </span><br><span class="line">设置背景为线性渐变颜色  上到下（注意：如果加了特定的浏览器支持，就不能用<span class="selector-tag">to</span> <span class="selector-tag">bottom</span>了，<span class="selector-tag">to</span>要省略掉）</span><br><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">bottom</span>, <span class="selector-tag">red</span>, <span class="selector-tag">blue</span>);</span><br><span class="line">设置背景为线性渐变颜色  左到右</span><br><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">right</span>, <span class="selector-tag">red</span>, <span class="selector-tag">blue</span>) ;</span><br><span class="line">设置背景为线性渐变颜色  左上到右下</span><br><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">right</span> <span class="selector-tag">bottom</span>, <span class="selector-tag">red</span>, <span class="selector-tag">blue</span>) ;</span><br><span class="line">设置背景为线性渐变颜色  正对角线，由左下到右上</span><br><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(45<span class="selector-tag">deg</span>, <span class="selector-tag">red</span>, <span class="selector-tag">blue</span>);</span><br><span class="line">设置背景为线性渐变颜色  默认上到下，0<span class="selector-tag">-10</span>%粉色，10%<span class="selector-tag">-20</span>%粉<span class="selector-tag">-</span>蓝渐变，20%<span class="selector-tag">-50</span>%蓝到橘色渐变</span><br><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">pink</span> 10%, <span class="selector-tag">blue</span> 20%, <span class="selector-tag">orange</span> 50%, <span class="selector-id">#000</span> 100%); </span><br><span class="line">设置背景为中心扩散渐变颜色 默认为中心像外层扩散渐变</span><br><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">red</span>, <span class="selector-tag">blue</span>);</span><br><span class="line">同上，百分比设置起始渐变区间 50%<span class="selector-tag">-100</span>%参与渐变，可以实现红日效果</span><br><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">red</span> 50%, <span class="selector-tag">dodgerblue</span>);</span><br><span class="line">每20%一个扩撒渐变区间 由内向外重复渐变</span><br><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">repeating-radial-gradient</span>(<span class="selector-id">#fff</span> 0%, <span class="selector-id">#000</span> 20%);</span><br><span class="line">每20%一个线性渐变区间 由上到下重复渐变</span><br><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">repeating-linear-gradient</span>(<span class="selector-id">#fff</span> 0%, <span class="selector-id">#000</span> 20%);</span><br><span class="line">/*渐变生成工具网址*/         http://www.internetke.com/jsEffects/2014120803/</span><br></pre></td></tr></table></figure><h2 id="多彩进度条的写法，美美哒"><a href="#多彩进度条的写法，美美哒" class="headerlink" title="多彩进度条的写法，美美哒"></a>多彩进度条的写法，美美哒</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>进度条书写<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        @<span class="keyword">keyframes</span> jdt &#123;</span></span><br><span class="line">            0% &#123;</span><br><span class="line">                width: 0;</span><br><span class="line">            &#125;</span><br><span class="line">            100% &#123;</span><br><span class="line">                width: 56%;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.jdt-container</span> &#123;</span></span><br><span class="line">            text-align: center;</span><br><span class="line">            width: 500px;</span><br><span class="line">            height: 20px;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            border-radius: 10px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#eee</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.jdt</span> &#123;</span></span><br><span class="line">            height: 20px;</span><br><span class="line"><span class="css">            <span class="comment">/*百分比会有不好的体验，建议使用固定宽度*/</span></span></span><br><span class="line"><span class="css">            <span class="comment">/*单组颜色也很好看*/</span></span></span><br><span class="line"><span class="css">            <span class="comment">/*background: repeating-linear-gradient(135deg,deepskyblue,white);*/</span></span></span><br><span class="line">            background: repeating-linear-gradient(135deg,deepskyblue 5%,deepskyblue 10%,white 10%,white 15%,gold 15%,gold 20%,white 20%,white 25%);</span><br><span class="line">            animation: jdt 2s infinite;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jdt-container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jdt"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5C14046%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191112213057719.png" alt="image-20191112213057719"></p><p><img src="C:%5CUsers%5C14046%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191112213430013.png" alt="image-20191112213430013"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>实现一左一右的对齐</title>
      <link href="/2019/11/27/shi-xian-yi-zuo-yi-you-de-dui-qi/"/>
      <url>/2019/11/27/shi-xian-yi-zuo-yi-you-de-dui-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="一左一右对齐"><a href="#一左一右对齐" class="headerlink" title="一左一右对齐"></a>一左一右对齐</h1><p>让元素在一行显示，并且向一侧对齐，可以使用float实现</p><p>让元素以不同布局在一行或一列排列 可以使用flex弹性布局实现</p><p>让元素在一行且左右对齐的方法</p><p><strong>如果使用float</strong></p><p>可以一个<code>float:left;</code>一个<code>float:right;</code>来实现，行内元素设置float,也会同时改变其布局属性为<code>inline-block</code>,就可以设置宽高了，行高是行内元素本来具备的属性。</p><p><strong>如果使用flex</strong></p><p>可以对需要在一行显示的元素使用<code>display:flex;</code></p><p>此种情况需要有三个以上的盒子，两个盒子固定宽度，剩下中间的盒子分配剩余宽度</p><p><strong>如果使用position</strong></p><p>父盒子<code>position:relative;</code>两个子盒子<code>position:absolute;</code>,分别定位到两侧</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>三种主流布局</title>
      <link href="/2019/11/27/san-chong-zhu-liu-bu-ju/"/>
      <url>/2019/11/27/san-chong-zhu-liu-bu-ju/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>递增递减规律</title>
      <link href="/2019/11/27/di-zeng-di-jian-gui-lu/"/>
      <url>/2019/11/27/di-zeng-di-jian-gui-lu/</url>
      
        <content type="html"><![CDATA[<p>递增递减规律</p><p>a++ = a    a=a+1</p><p>++a =a+1  a = a+1</p><p>a = 1</p><p>​             a++ + ++a  + a++ + ++a + a++</p><p>结果      1           3         3         5        5    </p><p>a=         2           3         4         5        6</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>补充知识点</title>
      <link href="/2019/11/27/bu-chong-zhi-shi-dian/"/>
      <url>/2019/11/27/bu-chong-zhi-shi-dian/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">title: typora-vue-theme主题介绍</span><br><span class="line">date: 2018-09-07 09:25:00</span><br><span class="line">author: 赵奇</span><br><span class="line">img: /source/images/xxx.jpg</span><br><span class="line">top: true</span><br><span class="line">cover: true</span><br><span class="line">coverImg: /images/1.jpg</span><br><span class="line">password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92</span><br><span class="line">toc: false</span><br><span class="line">mathjax: false</span><br><span class="line">summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</span><br><span class="line">categories: Markdown</span><br><span class="line">tags:</span><br><span class="line">  - Typora</span><br><span class="line">  - Markdown</span><br></pre></td></tr></table></figure><h1 id="补充知识"><a href="#补充知识" class="headerlink" title="补充知识"></a>补充知识</h1><ol><li><p>广义的HTML5，是HTML5本身+CSS3新特性+javascript的更新</p></li><li><p>html5 新增了语义化标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span>头部标签<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span>导航标签<span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span>内容标签<span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span>块级标签<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span>侧边栏标签<span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span>底部标签<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><p>由于语义化标签</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>笔记</title>
      <link href="/2019/11/27/bi-ji/"/>
      <url>/2019/11/27/bi-ji/</url>
      
        <content type="html"><![CDATA[<h3 id="导航-列表-小竖线的写法"><a href="#导航-列表-小竖线的写法" class="headerlink" title="导航 列表 小竖线的写法"></a>导航 列表 小竖线的写法</h3><ol><li><p>边框法</p><ol><li><p>包裹在</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>里面，对<li>设置一个左或者右边框，这样做有些不好的显示效果，因为很难控制竖线的高度和文字高度相同，不太推荐使用。如下图，作为新闻列表模块的title内容前面的修饰，更佳。</p><p><img src="C:%5CUsers%5C14046%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191030105517214.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">border-left</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">rgba</span>(200,200,200,<span class="selector-class">.4</span>);<span class="comment">/*半透明灰白色边框写法*/</span></span><br></pre></td></tr></table></figure></li></ol></li></ol><ol start="2"><li><p>文字法</p><ol><li>“|”</li><li>图形字体</li></ol></li><li><p>块背景法（一般用作导航的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果单独作为承载内容的最外层，都会设置float属性）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">width</span><span class="selector-pseudo">:1px</span>;<span class="selector-tag">height</span>:合适的高度;<span class="selector-tag">background-color</span>:<span class="selector-id">#666</span>;<span class="selector-tag">margin</span>:设置合适的上方外边距，使之垂直方向对齐文字，设置合适的左右外边距，使之撑开与左右文字链接的距离，底部外边距设为0;</span><br></pre></td></tr></table></figure><p>或者可以写一个任意元素，如span,设置以下属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span><span class="selector-pseudo">:block</span>;<span class="comment">/*或者直接float:left;*/</span></span><br><span class="line"><span class="selector-tag">width</span><span class="selector-pseudo">:6px</span>;</span><br><span class="line"><span class="selector-tag">height</span><span class="selector-pseudo">:14px</span>;</span><br><span class="line"><span class="selector-tag">background-color</span>:<span class="selector-id">#134532</span>;</span><br><span class="line"><span class="selector-tag">border-radius</span><span class="selector-pseudo">:3px</span>;</span><br></pre></td></tr></table></figure><p>以实现有圆角、带颜色的粗竖线效果</p><p><img src="C:%5CUsers%5C14046%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191031203228858.png" alt="image-20191031203228858"></p></li></ol><h3 id="logo的统一写法"><a href="#logo的统一写法" class="headerlink" title="logo的统一写法"></a>logo的统一写法</h3><p>logo图片一般放在</p><h3 id="鼠标经过-里面的变颜色"><a href="#鼠标经过-里面的变颜色" class="headerlink" title="鼠标经过 里面的变颜色"></a>鼠标经过<li> 里面的<a>变颜色</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line"><span class="attribute">color</span>:white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="当盒子有宽高的时候，设置padding的样式时，是向外撑开盒子，所以需要减去padding的总合，但是可以通过以下代码解决，使之向内收缩"><a href="#当盒子有宽高的时候，设置padding的样式时，是向外撑开盒子，所以需要减去padding的总合，但是可以通过以下代码解决，使之向内收缩" class="headerlink" title="当盒子有宽高的时候，设置padding的样式时，是向外撑开盒子，所以需要减去padding的总合，但是可以通过以下代码解决，使之向内收缩"></a>当盒子有宽高的时候，设置padding的样式时，是向外撑开盒子，所以需要减去padding的总合，但是可以通过以下代码解决，使之向内收缩</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;<span class="comment">/*向内收缩*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="在“子绝父相”的情况下，如果有其他子标签属于标准流，由于其他子标签的宽高可以大于父标签，所以，其可以溢出占位，将下面标准流上的标签挤下来，在子标签的宽高没有超出父标签的默认宽高的情况下，则以父元素的实际宽高为整体宽高，处于绝对定位的子标签，漂浮于标准流和浮动层之上，且不占位置，不会影响下面标准流的位置"><a href="#在“子绝父相”的情况下，如果有其他子标签属于标准流，由于其他子标签的宽高可以大于父标签，所以，其可以溢出占位，将下面标准流上的标签挤下来，在子标签的宽高没有超出父标签的默认宽高的情况下，则以父元素的实际宽高为整体宽高，处于绝对定位的子标签，漂浮于标准流和浮动层之上，且不占位置，不会影响下面标准流的位置" class="headerlink" title="在“子绝父相”的情况下，如果有其他子标签属于标准流，由于其他子标签的宽高可以大于父标签，所以，其可以溢出占位，将下面标准流上的标签挤下来，在子标签的宽高没有超出父标签的默认宽高的情况下，则以父元素的实际宽高为整体宽高，处于绝对定位的子标签，漂浮于标准流和浮动层之上，且不占位置，不会影响下面标准流的位置"></a>在“子绝父相”的情况下，如果有其他子标签属于标准流，由于其他子标签的宽高可以大于父标签，所以，其可以溢出占位，将下面标准流上的标签挤下来，在子标签的宽高没有超出父标签的默认宽高的情况下，则以父元素的实际宽高为整体宽高，处于绝对定位的子标签，漂浮于标准流和浮动层之上，且不占位置，不会影响下面标准流的位置</h5><p><img src="C:%5CUsers%5C14046%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191030191738132.png" alt="image-20191030191738132"></p><p>此图中oppo产品系列那一块是绝对定位过去的，它和上面的那一块标准流标签同属于一个父标签，父标签没有给高度，是由标准流子标签撑开，虽然绝对定位的那一块超出了标准流标签的位置，但是并没影响到下面标准流标签的布局，是紧贴上面最外层标准流的父标签的下边界的。</p><h3 id="长句…省略号显示"><a href="#长句…省略号显示" class="headerlink" title="长句…省略号显示"></a>长句…省略号显示</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">white-space</span>: <span class="selector-tag">nowrap</span>;<span class="selector-tag">text-overflow</span>: <span class="selector-tag">ellipsis</span>;<span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span>;</span><br></pre></td></tr></table></figure><p>以上代码是让一行显示的较长的句子在有限空间范围内，超出范围的省略号显示的代码</p><h5 id="如果发现padding-top或者margin-top-不起作用，检查一下上面的同级块元素是否没有设置高度，若设置了，是否小于实际高度，或者其子元素有浮动，没有清除浮动，或者可以直接给上面的同级元素加上-overflow-hidden；属性。"><a href="#如果发现padding-top或者margin-top-不起作用，检查一下上面的同级块元素是否没有设置高度，若设置了，是否小于实际高度，或者其子元素有浮动，没有清除浮动，或者可以直接给上面的同级元素加上-overflow-hidden；属性。" class="headerlink" title="如果发现padding - top或者margin - top 不起作用，检查一下上面的同级块元素是否没有设置高度，若设置了，是否小于实际高度，或者其子元素有浮动，没有清除浮动，或者可以直接给上面的同级元素加上 overflow:hidden；属性。"></a>如果发现padding - top或者margin - top 不起作用，检查一下上面的同级块元素是否没有设置高度，若设置了，是否小于实际高度，或者其子元素有浮动，没有清除浮动，或者可以直接给上面的同级元素加上 overflow:hidden；属性。</h5><h2 id="谷歌浏览器把audio的自动播放禁用了autoplay"><a href="#谷歌浏览器把audio的自动播放禁用了autoplay" class="headerlink" title="谷歌浏览器把audio的自动播放禁用了autoplay"></a>谷歌浏览器把audio的自动播放禁用了autoplay</h2><h2 id="移动web第一天"><a href="#移动web第一天" class="headerlink" title="移动web第一天"></a>移动web第一天</h2><h3 id="什么是HTML5？"><a href="#什么是HTML5？" class="headerlink" title="什么是HTML5？"></a>什么是HTML5？</h3><p>​    不是一门新的语言，而是html第五次重大修改</p><h3 id="html5修改了什么内容？"><a href="#html5修改了什么内容？" class="headerlink" title="html5修改了什么内容？"></a>html5修改了什么内容？</h3><p>​    1.新增了语义化标签<br>​    2.新增了音频  视频  canvas画图<br>​    3.新增input标签  新增标签表单的属性<br>​    4.新增本地存储  地理定位<br>​    5.新增对类名操作<br>​    6.新增自定义属性的设置</p><h4 id="语义化标签：（适用于移动端）"><a href="#语义化标签：（适用于移动端）" class="headerlink" title="语义化标签：（适用于移动端）"></a>语义化标签：（适用于移动端）</h4><p>​    1.header 头部标签<br>​    2.nav  导航标签<br>​    3.article 内容标签<br>​    4.section 相当于一块区域<br>​    5.aside 侧边栏<br>​    6.footer 尾部<br>​    7.main 主体标签</p><h4 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h4><p>​    标签： audio<br>​    属性：<br>​        src： 路径<br>​        controls：控制器<br>​        autoplay:自动播放<br>​        loop:循环播放</p><h4 id="视频："><a href="#视频：" class="headerlink" title="视频："></a>视频：</h4><p>​    标签  video<br>​    属性：<br>​        src： 路径<br>​        controls：控制器<br>​        autoplay:自动播放<br>​        loop:循环播放<br>​        poster：默认播放前的第一帧。<br>​        muted：静音播放<br>​        width与height  视频的宽高<br>​        等比例放大缩小（只需要设置一个即可）</p><h4 id="新增input-type属性"><a href="#新增input-type属性" class="headerlink" title="新增input  type属性"></a>新增input  type属性</h4><pre><code>1. email验证邮箱    2. url：网址    3. date日期    4. month：月    5. week：周    6. number：数字    7. tel电话： 在移动端弹出数字键盘    8. search： 人性化体验    9. time：时间</code></pre><h4 id="新增标签："><a href="#新增标签：" class="headerlink" title="新增标签："></a>新增标签：</h4><p>​    分组表单：<br>​    <fieldset align="center"><br>​         <strong>当前组的标题</strong><br>​        <legend>用户信息</legend><br>​    </fieldset><br>​    下拉列表：<br>​    input:list绑定对应的id<br>​     <input type="text" list="a"><br>​    起id名：</p><pre><code>&lt;datalist id=&quot;a&quot;&gt;    &lt;option value=&quot;张三&quot; label=&quot;好人&quot;&gt;&lt;/option&gt;    &lt;option value=&quot;隔壁张三&quot; label=&quot;大好人&quot;&gt;&lt;/option&gt;&lt;/datalist&gt;</code></pre><p>双标签的button和input type=”button”的区别</p><p>button 有默认提交功能 而input type=”button”没有</p><p>多个autofocus 只会生效第一个</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>背景图片插入图片多种设置方式</title>
      <link href="/2019/11/27/bei-jing-tu-pian-cha-ru-tu-pian-duo-chong-she-zhi-fang-shi/"/>
      <url>/2019/11/27/bei-jing-tu-pian-cha-ru-tu-pian-duo-chong-she-zhi-fang-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="背景图片-图片设置技巧"><a href="#背景图片-图片设置技巧" class="headerlink" title="背景图片/图片设置技巧"></a>背景图片/图片设置技巧</h1><ol><li><p>精灵图二倍图</p><p>精灵图如果想要缩小，然后再定位到指定位置，可以先将精灵图缩小到和图标需要缩小的倍数一致，然后再测量需要定位的数值，然后设置的时候 同比例设置 background-size: X%；即可实现。放大同理</p></li><li><p>背景图、插入图，如果通过布局视口的CSS设置宽高，要是需要在移动设备显示更清晰，可通过将图片做成2-4倍等比例放大的图片，然后CSS设置图片为布局视口的宽高（图片默认会有下间隙，记得使用vertical-aline:top/middle/bottom,清除），在移动设备上则能实现高清图。</p></li><li><p><code>background-origin:boder-box/padding-box/content-box;</code>可以实现改变背景图片的显示起始位置</p></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">padding-box</span>： 从<span class="selector-tag">padding</span>区域（含<span class="selector-tag">padding</span>）开始显示背景图像。 </span><br><span class="line"><span class="selector-tag">border-box</span>： 从<span class="selector-tag">border</span>区域（含<span class="selector-tag">border</span>）开始显示背景图像。 </span><br><span class="line"><span class="selector-tag">content-box</span>： 从<span class="selector-tag">content</span>区域开始显示背景图像。 </span><br><span class="line">默认值：<span class="selector-tag">padding-box</span></span><br></pre></td></tr></table></figure><img src="C:\Users\14046\AppData\Roaming\Typora\typora-user-images\image-20191113214217195.png" alt="image-20191113214217195" style="zoom:55%;" /><img src="C:\Users\14046\AppData\Roaming\Typora\typora-user-images\image-20191113214254438.png" alt="image-20191113214254438" style="width:200px;margin:0 0 0 20%;" /> <blockquote><p>​                                                                                  原图</p></blockquote><p>如图是通过以下代码实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>背景设置练习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        div &#123;</span><br><span class="line">            margin: 200px auto;</span><br><span class="line">            width: 500px;</span><br><span class="line">            height: 500px;</span><br><span class="line">            padding: 200px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 10<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">rgba</span>(99,12,211,<span class="selector-class">.2</span>);</span></span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">            background: url(images/1.png) no-repeat;</span><br><span class="line">            background-origin: content-box;</span><br><span class="line">            background-clip: content-box;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        我是内容主体</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>7.动画 animation之打印效果</title>
      <link href="/2019/11/27/7.dong-hua-animation-zhi-da-yin-xiao-guo/"/>
      <url>/2019/11/27/7.dong-hua-animation-zhi-da-yin-xiao-guo/</url>
      
        <content type="html"><![CDATA[<h1 id="实现-文字打字机效果1-CSS实现"><a href="#实现-文字打字机效果1-CSS实现" class="headerlink" title="实现 文字打字机效果1  CSS实现"></a>实现 文字打字机效果1  CSS实现</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>通过animation: steps(12);实现打印效果<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        @<span class="keyword">keyframes</span> typed &#123;</span></span><br><span class="line">            0% &#123;</span><br><span class="line">                width: 0;</span><br><span class="line">            &#125;</span><br><span class="line">            100% &#123;</span><br><span class="line">                width: 360px;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        div &#123;</span><br><span class="line">            height: 32px;</span><br><span class="line">            line-height: 30px;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">            white-space: nowrap;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            animation: typed 12s steps(12) infinite;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是一个打印文字的效果<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>6.边框突出之美</title>
      <link href="/2019/11/27/6.bian-kuang-tu-chu-zhi-mei/"/>
      <url>/2019/11/27/6.bian-kuang-tu-chu-zhi-mei/</url>
      
        <content type="html"><![CDATA[<p>利用<code>margin</code>负值之美和悬停改变显示模式为<code>position:relative;</code>,提升其显示层次。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>6.2D3D转换</title>
      <link href="/2019/11/27/6.2d3d-zhuan-huan/"/>
      <url>/2019/11/27/6.2d3d-zhuan-huan/</url>
      
        <content type="html"><![CDATA[<h1 id="2D-转换综合写法"><a href="#2D-转换综合写法" class="headerlink" title="2D 转换综合写法"></a>2D 转换综合写法</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*2d转换连写 位移 旋转 缩放 倾斜*/</span></span><br><span class="line"><span class="selector-tag">transform</span><span class="selector-pseudo">:translate()</span> <span class="selector-tag">rotate</span>() <span class="selector-tag">scale</span>() <span class="selector-tag">skew</span>();</span><br></pre></td></tr></table></figure><h1 id="3D-转换综合写法"><a href="#3D-转换综合写法" class="headerlink" title="3D 转换综合写法"></a>3D 转换综合写法</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>5.CSS实现小三角形</title>
      <link href="/2019/11/27/5.css-shi-xian-xiao-san-jiao-xing/"/>
      <url>/2019/11/27/5.css-shi-xian-xiao-san-jiao-xing/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS三角形之美"><a href="#CSS三角形之美" class="headerlink" title="CSS三角形之美"></a>CSS三角形之美</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="attribute">width</span>: <span class="number">0</span>; </span><br><span class="line">   <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">line-height</span>:<span class="number">0</span>；</span><br><span class="line">   font-size: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">border-top</span>: <span class="number">10px</span> solid red;</span><br><span class="line"><span class="attribute">border-right</span>: <span class="number">10px</span> solid green;</span><br><span class="line"><span class="attribute">border-bottom</span>: <span class="number">10px</span> solid blue;</span><br><span class="line"><span class="attribute">border-left</span>: <span class="number">10px</span> solid <span class="number">#000</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一张图， 你就知道 css 三角是怎么来的了, 做法如下：</p><ol><li>我们用css 边框可以模拟三角效果</li><li>宽度高度为0</li><li>我们4个边框都要写， 只保留需要的边框颜色，其余的不能省略，都改为 transparent 透明就好了</li><li>为了照顾兼容性 低版本的浏览器，加上 font-size: 0;  line-height: 0;</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>4.图片文字垂直居中</title>
      <link href="/2019/11/27/4.tu-pian-wen-zi-chui-zhi-ju-zhong/"/>
      <url>/2019/11/27/4.tu-pian-wen-zi-chui-zhi-ju-zhong/</url>
      
        <content type="html"><![CDATA[<h2 id="3-vertical-align-垂直对齐"><a href="#3-vertical-align-垂直对齐" class="headerlink" title="3. vertical-align 垂直对齐"></a>3. vertical-align 垂直对齐</h2><ul><li>有宽度的块级元素水平居中对齐，是margin: 0 auto;</li><li>让内容水平居中对齐，是 text-align: center;</li></ul><p>但是我们从来没有讲过有垂直居中的属性。</p><p>vertical-align 垂直对齐，它只针对于<strong>行内元素</strong>或者<strong>行内块元素</strong>，</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vertical-align : baseline |top |middle |bottom</span><br></pre></td></tr></table></figure><p>设置或检索对象内容的垂直对其方式。</p><ul><li><p>注意：</p><p>vertical-align 不影响块级元素中的内容对齐，它只针对于<strong>行内元素</strong>或者<strong>行内块元素</strong>，</p><p>特别是行内块元素， <strong>通常用来控制图片/表单与文字的对齐</strong>。</p></li></ul><h3 id="3-1-图片、表单和文字对齐"><a href="#3-1-图片、表单和文字对齐" class="headerlink" title="3.1 图片、表单和文字对齐"></a>3.1 图片、表单和文字对齐</h3><p>所以我们知道，我们可以通过vertical-align 控制图片和文字的垂直关系了。 默认的图片会和文字基线对齐。</p><h3 id="3-2-去除图片底侧空白缝隙"><a href="#3-2-去除图片底侧空白缝隙" class="headerlink" title="3.2 去除图片底侧空白缝隙"></a>3.2 去除图片底侧空白缝隙</h3><ul><li><p>原因：</p><p>图片或者表单等行内块元素，他的底线会和父级盒子的基线对齐。</p><p>就是图片底侧会有一个空白缝隙。</p></li><li><p>解决的方法就是：  </p><ul><li><p>给img vertical-align:middle | top| bottom等等。  让图片不要和基线对齐。</p></li><li><p>给img 添加 display：block; 转换为块级元素就不会存在问题了。</p></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>3.CSS用户界面体验</title>
      <link href="/2019/11/27/3.css-yong-hu-jie-mian-ti-yan/"/>
      <url>/2019/11/27/3.css-yong-hu-jie-mian-ti-yan/</url>
      
        <content type="html"><![CDATA[<h1 id="用户界面体验设计"><a href="#用户界面体验设计" class="headerlink" title="用户界面体验设计"></a>用户界面体验设计</h1><h3 id="1-1-鼠标样式设置cursor"><a href="#1-1-鼠标样式设置cursor" class="headerlink" title="1.1 鼠标样式设置cursor"></a>1.1 鼠标样式设置cursor</h3><p> 设置或检索在对象上移动的鼠标指针采用何种系统预定义的光标形状。</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><strong>default</strong></td><td>小白  默认</td></tr><tr><td><strong>pointer</strong></td><td>小手</td></tr><tr><td><strong>move</strong></td><td>移动</td></tr><tr><td><strong>text</strong></td><td>文本</td></tr><tr><td><strong>not-allowed</strong></td><td>禁止</td></tr></tbody></table><p> 鼠标放我身上查看效果哦：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">"cursor:default"</span>&gt;</span>我是小白<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">"cursor:pointer"</span>&gt;</span>我是小手<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">"cursor:move"</span>&gt;</span>我是移动<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">"cursor:text"</span>&gt;</span>我是文本<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">"cursor:not-allowed"</span>&gt;</span>我是文本<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-2-轮廓线-outline"><a href="#1-2-轮廓线-outline" class="headerlink" title="1.2 轮廓线 outline"></a>1.2 轮廓线 outline</h3><p> 是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。 </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">outline : outline-color ||outline-style || outline-width</span><br></pre></td></tr></table></figure><p> 但是我们都不关心可以设置多少，我们平时都是去掉的。 li  </p><p>最直接的写法是 ：  outline: 0;   或者  outline: none;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span>  <span class="attr">type</span>=<span class="string">"text"</span>  <span class="attr">style</span>=<span class="string">"outline: 0;"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-3-防止拖拽文本域-resize"><a href="#1-3-防止拖拽文本域-resize" class="headerlink" title="1.3 防止拖拽文本域 resize"></a>1.3 防止拖拽文本域 resize</h3><p>实际开发中，我们文本域右下角是<strong>不可以拖拽</strong>： </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span>  <span class="attr">style</span>=<span class="string">"resize: none;"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-用户界面样式总结"><a href="#2-4-用户界面样式总结" class="headerlink" title="2.4 用户界面样式总结"></a>2.4 用户界面样式总结</h3><table><thead><tr><th>属性</th><th>用途</th><th>用途</th></tr></thead><tbody><tr><td><strong>鼠标样式</strong></td><td>更改鼠标样式cursor</td><td>样式很多，重点记住 pointer</td></tr><tr><td><strong>轮廓线</strong></td><td>表单默认outline</td><td>outline 轮廓线，我们一般直接去掉，border是边框，我们会经常用</td></tr><tr><td>防止拖拽</td><td>主要针对文本域resize</td><td>防止用户随意拖拽文本域，造成页面布局混乱，我们resize:none</td></tr></tbody></table><p>拓展：有表单的页面样式，在格式化的时候通常设置<code>input{outline:none;}textarea{outline:none;}</code>清除轮廓线</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2.元素隐藏可见的几种设置方式</title>
      <link href="/2019/11/27/2.yuan-su-yin-cang-ke-jian-de-ji-chong-she-zhi-fang-shi/"/>
      <url>/2019/11/27/2.yuan-su-yin-cang-ke-jian-de-ji-chong-she-zhi-fang-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="元素的显示与隐藏"><a href="#元素的显示与隐藏" class="headerlink" title="元素的显示与隐藏"></a>元素的显示与隐藏</h1><h3 id="1-1-display的显示隐藏特性"><a href="#1-1-display的显示隐藏特性" class="headerlink" title="1.1 display的显示隐藏特性"></a>1.1 display的显示隐藏特性</h3><ol><li><code>display:none;</code> 元素隐藏，且不保留原来位置，常用于置顶广告的删除等。</li><li><code>display:block;</code> 可以实现元素由隐藏到显示的效果，并恢复原有位置。</li></ol><h3 id="1-2-visibility的显示隐藏特性"><a href="#1-2-visibility的显示隐藏特性" class="headerlink" title="1.2 visibility的显示隐藏特性"></a>1.2 visibility的显示隐藏特性</h3><ol><li><code>visibility:hidden;</code> 元素隐藏，但是保留原来的位置，常用于某些特效的实现。如配合绝对定位的元素使用，实现划入显示，划出隐藏。</li><li><code>visibility:visible;</code> 元素显示。</li></ol><h3 id="1-3-overflow的溢出显示与隐藏"><a href="#1-3-overflow的溢出显示与隐藏" class="headerlink" title="1.3 overflow的溢出显示与隐藏"></a>1.3 overflow的溢出显示与隐藏</h3><ul><li><p>visible：  </p><p>对溢出内容不做处理，内容可能会超出容器。 </p></li><li><p>hidden：  </p><p>隐藏溢出容器的内容且不出现滚动条。 </p></li><li><p>scroll：  </p><p>隐藏溢出容器的内容，溢出的内容将以卷动滚动条的方式呈现。 </p></li><li><p>auto：  </p><p>当内容没有溢出容器时不出现滚动条，当内容溢出容器时出现滚动条，按需出现滚动条。此为body对象和textarea的默认值。</p></li></ul><h3 id="1-4-显示与隐藏总结"><a href="#1-4-显示与隐藏总结" class="headerlink" title="1.4 显示与隐藏总结"></a>1.4 显示与隐藏总结</h3><table><thead><tr><th>属性</th><th>区别</th><th>用途</th></tr></thead><tbody><tr><td><strong>display</strong></td><td>隐藏对象，不保留位置</td><td>配合后面js做特效，比如下拉菜单，原先没有，鼠标经过，显示下拉菜单， 应用极为广泛</td></tr><tr><td><strong>visibility</strong></td><td>隐藏对象，保留位置</td><td>使用较少</td></tr><tr><td><strong>overflow</strong></td><td>只是隐藏超出大小的部分</td><td>1. 可以清除浮动 2. 保证盒子里面的内容不会超出该盒子范围 3.配合transform:scale(1.x)使用</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>1.定位</title>
      <link href="/2019/11/27/1.ding-wei/"/>
      <url>/2019/11/27/1.ding-wei/</url>
      
        <content type="html"><![CDATA[<h1 id="定位-position-重点"><a href="#定位-position-重点" class="headerlink" title="定位 position 重点"></a>定位 position 重点</h1><p>一个完整的定位，是<strong>定位模式+边偏移</strong></p><p><code>position:属性值</code></p><p><code>top:100px</code></p><p><code>left:100px</code></p><h2 id="1-1-定位模式"><a href="#1-1-定位模式" class="headerlink" title="1.1 定位模式"></a>1.1 定位模式</h2><ul><li><p>static：  </p><p>对象遵循常规流。此时4个定位偏移属性不会被应用。 </p></li><li><p>relative：  </p><p>对象遵循常规流，并且参照自身在常规流中的位置通过top，right，bottom，left这4个定位偏移属性进行偏移时不会影响常规流中的任何元素。 </p></li><li><p>absolute：  </p><p>对象脱离常规流，此时偏移属性参照的是离自身最近的定位祖先元素，如果没有定位的祖先元素，则一直回溯到<code>body</code>元素。盒子的偏移位置不影响常规流中的任何元素，其margin不与其他任何margin折叠。 </p></li><li><p>fixed：  </p><p>与<code>absolute</code>一致，但偏移定位是以窗口为参考。当出现滚动条时，对象不会随着滚动。 </p></li><li><p>center：  </p><p>与<code>absolute</code>一致，但偏移定位是以定位祖先元素的中心点为参考。盒子在其包含容器垂直水平居中。（CSS3） </p></li><li><p>page：  </p><p>与<code>absolute</code>一致。元素在分页媒体或者区域块内，元素的包含块始终是初始包含块，否则取决于每个<code>absolute</code>模式。（CSS3） </p></li><li><p>sticky：  </p><p>对象在常态时遵循常规流。它就像是<code>relative</code>和<code>fixed</code>的合体，当在屏幕中时按常规流排版，当卷动到屏幕外时则表现如<code>fixed</code>。该属性的表现是现实中你见到的吸附效果。（CSS3） </p></li></ul><p>*  CSS3新增属性可能存在描述错误及变更，仅供参考，持续更新</p><h2 id="引申"><a href="#引申" class="headerlink" title="引申"></a>引申</h2><ul><li><p>当<code>position</code>的值为<code>非static</code>时，其层叠级别通过<code>z-index</code>属性定义。  </p></li><li><p>z-index的默认值为auto：  </p><p>元素在当前层叠上下文中的层叠级别是0。元素不会创建新的局部层叠上下文，除非它是根元素。比如固定定位，不会按照定位的元素会漂浮在标准流和浮动流之上的原则，因为他起定位依据作用的父级是根元素body,所以符合写在后面的会在上面的特性，或者通过z-index进行提升层级。它和正常流在一个上下文</p></li><li><p>绝对定位的元素，在top，right，bottom，left属性未设置时，会紧随在其前面的兄弟元素之后，但在位置上不影响常规流中的任何元素。 </p></li><li><p>标准流的子盒子，总是以父级元素为准，移动位置。 </p></li></ul><table><thead><tr><th>值</th><th>语义</th></tr></thead><tbody><tr><td>static</td><td>静态定位（默认）</td></tr><tr><td>relative</td><td>相对定位</td></tr><tr><td>absolute</td><td>绝对定位</td></tr><tr><td>fixed</td><td>固定定位</td></tr></tbody></table><h3 id="1-1-1-相对定位的2点特性"><a href="#1-1-1-相对定位的2点特性" class="headerlink" title="1.1.1 相对定位的2点特性"></a>1.1.1 相对定位的2点特性</h3><ol><li><p>是相对于<strong>它原来在标准流中的位置</strong>进行定位移动的。</p></li><li><p>原来<strong>在标准流的区域继续占有</strong>，后面的元素依然以标准流的方式对待它。</p></li></ol><h3 id="1-1-2-绝对定位的特性"><a href="#1-1-2-绝对定位的特性" class="headerlink" title="1.1.2 绝对定位的特性"></a>1.1.2 绝对定位的特性</h3><ol><li><p>是以<strong>带有定位的祖先元素</strong>来进行定位移动的，祖先元素如果没有定位，则向上回溯到<code>body</code>元素，最终以浏览器可视区域为准进行定位移动。</p></li><li><p>完全脱标——完全不占位置，盒子的偏移位置不影响标准流中的任何元素，其margin不与其他任何margin折叠。 </p><p><strong>布局要点</strong>：<strong>父级要占有位置，子级要任意摆放</strong>，这就是<strong>子绝父相</strong>的由来。</p></li></ol><h3 id="1-1-3-固定定位的特性"><a href="#1-1-3-固定定位的特性" class="headerlink" title="1.1.3 固定定位的特性"></a>1.1.3 固定定位的特性</h3><ol><li><p><strong>完全脱标</strong> —— 完全不占位置；</p></li><li><p>只认<strong>浏览器的可视窗口</strong> —— <code>浏览器可视窗口 + 边偏移属性</code> 来设置元素的位置；</p><ul><li>跟父元素没有任何关系；单独使用的</li><li>不随滚动条滚动而滚动。</li></ul></li><li><p>IE 6 等低版本浏览器不支持固定定位。</p></li></ol><h3 id="1-1-4-z-index的堆叠顺序"><a href="#1-1-4-z-index的堆叠顺序" class="headerlink" title="1.1.4 z-index的堆叠顺序"></a>1.1.4 z-index的堆叠顺序</h3><p><code>z-index</code> 的特性如下：</p><ol><li><strong>属性值</strong>：<strong>正整数</strong>、<strong>负整数</strong>或 <strong>0</strong>，默认值是 0，数值越大，盒子越靠上；</li><li>如果<strong>属性值相同</strong>，则按照书写顺序，<strong>后来居上</strong>；</li><li><strong>数字后面不能加单位</strong>。</li></ol><p><strong>注意</strong>：<code>z-index</code> 只能应用于<strong>相对定位</strong>、<strong>绝对定位</strong>和<strong>固定定位</strong>的元素，其他<strong>标准流</strong>、<strong>浮动</strong>和<strong>静态定位</strong>无效。</p><h3 id="1-1-5-绝对定位和固定定位，可以改变display属性"><a href="#1-1-5-绝对定位和固定定位，可以改变display属性" class="headerlink" title="1.1.5 绝对定位和固定定位，可以改变display属性"></a>1.1.5 绝对定位和固定定位，可以改变display属性</h3><p>前面我们讲过， display 是 显示模式， 可以改变显示模式有以下方式:</p><ul><li>可以用inline-block  转换为行内块</li><li>可以用浮动 float 默认转换为行内块（类似，并不完全一样，因为浮动是脱标的）</li><li>绝对定位和固定定位也和浮动类似， 默认转换的特性 转换为行内块。</li></ul><p>所以说， 一个行内的盒子，如果加了<strong>浮动</strong>、<strong>固定定位</strong>和<strong>绝对定位</strong>，不用转换，就可以给这个盒子直接设置宽度和高度等。</p><p><strong>同时注意：</strong></p><p>浮动元素、绝对定位(固定定位）元素的都不会触发外边距合并的问题。 （我们以前是用padding border overflow解决的）</p><p>也就是说，我们给盒子改为了浮动或者定位，就不会有垂直外边距合并的问题了。</p><h3 id="后续拓展补充"><a href="#后续拓展补充" class="headerlink" title="后续拓展补充"></a>后续拓展补充</h3><p><strong>CSS的三大特性：层叠  继承  优先级</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>总结</title>
      <link href="/2019/11/27/zong-jie/"/>
      <url>/2019/11/27/zong-jie/</url>
      
        <content type="html"><![CDATA[<p>##js第一天：<br>什么编程语言： 具有一定的逻辑思维 实现特定的功能  java   c  c++ c#  php  .net  js<br>###什么是javascript —— js<br>    实现网页的动态效果<br>###js的历史背景：<br>    1995年  布兰登艾奇  7-10天<br>    原创之处并不优秀  优秀之处并非原创<br>    sun公司—java<br>    javascript<br>###早起js的价值：<br>    主要的需求<br>        当用户输入表单信息 提交 过5分钟 服务器返回内容 说 信息输入错误<br>        javascript—-解决表单验证（不通过服务器  只要用户输入错误 直接告诉用户）<br>###现在的价值：<br>    网页的交互（动态效果）<br>    表单验证<br>    小游戏<br>    地图（数据可视化）<br>###js的特点：<br>    1.js脚本语言（不需要服务器  直接挂在到浏览器）<br>    2.js是弱类型语言  指定什么变量名都可以 可以存储任意类型   强类型想存储数值 必须指定int才可以<br>    3.js是直译型语言（浏览器认识js  直接翻译不需要转换）  java浏览器不认识  需要转换浏览器能够识别的语言<br>###js的组成<br>    ECMAscript（基础语法）+ BOM（浏览器对象） + DOM（文档对象模型）<br>###js的两种书写方式：<br>    1.内部<br>        <script>....</script><br>    2.外部<br>        <script src="外部js文件"></script><br>###js注释：<br>    // 单行<br>    /* 多行 */<br>###js输出语句：<br>    1.弹出警示框<br>        alert()<br>    2.弹出输入框<br>         prompt(“请输入”, 1234)<br>         第一个参数：代表提示信息<br>         第二个参数：文本框的默认值<br>    3.控制面板：<br>        console.log(值) 常用！！！<br>    4.文档输出：<br>        document.write()<br>###变量：<br>    变量就是产量  容器  盒子<br>    var num = 10:  声明一个变量名叫num   变量名的值10<br>###声明变量的几种方式：<br>    1.var num = 10<br>    2. var num; num = 10<br>    3. 统一声明再去赋值<br>    var num, num1, num2, num3;<br>    num = 1;<br>    num1 = 2;<br>    num2 = 3;<br>    4.var num1 = 10, num2 = 20, num3 = 30;<br>###声明变量的注意点：<br>    1.只声明没有赋值<br>        undefined<br>    2.没有声明 直接赋值<br>        浏览器自动加上var关键字<br>    3.没有声明，没有给值<br>        报错   num is not defined<br>    var num1 = prompt(“请输入第一个值”);<br>    var num2 = prompt(“请输入第二个值”);<br>    document.write(num1 - num2);     </p><pre><code>// 交换两个值的变量？？var n1 = 10;var n2 = 20;第一种：var n3;n3 = n1;n1 = n2;n2 = n3第二种：n1 = n2 + n1;n2 = n1 - n2;n1 = n1 - n2;</code></pre><p>###变量的命名规范：<br>    1.包含 数字  字母 下划线 （不能以数字开头）<br>    2.不能包含特殊字符<br>    3. uName  mySchool<br>    4.不能超过255个字符;<br>    5.不能是关键字与保留字;<br>        var  for  while if<br>###数据类型：<br>    基本数据类型<br>        数值型   字符型  布尔型  undefined  null<br><strong>数值型</strong>:<br>            二进制  三进制 五进制  八进制 10进制 16进制<br>            0  小数  负数 整数   NaN<br>    isNaN判断当前数据是否是数字  如果是数字返回false  不是返回true<br>       isNaN(“123”)  会默认尝试转换数字   “123”—-123<br>       总结：<br>        1.只要字符串里面全是数字就会转化成功<br>        2.isNaN判断的是 是否是数字并不是判断数值型<br>    转移字符：<br>        \n:换行<br>        :原样输出<br>        \t:tab<br>        \b:空格<br><strong>字符串</strong><br>    只要加引号的都属于字符型<br>        数值相加  字符相连<br>        var str = “hello”<br>        字符串的长度：str.length<br>        找到具体的元素：str[索引]   索引从0开始   0默认第一个字符<br>null  undefined 特殊类型 先知道</p><p><strong>布尔类型</strong><br>    true   false<br><strong>typeof检测数据类型</strong><br>    console.log(typeof )<br>###数据类型转换：<br><strong>转换为字符串：</strong><br>    1.显示（强制）类型转换   var num = 10;<br>        1.num.toString()<br>        2.String(num)<br>    2.隐式类型转换：<br>        与字符串拼接<br>    不会影响原来的数据类型！！！！<br><strong>转换数值类型</strong> var str = “10”;<br>    1.显示类型转换<br>        1.parseInt()<br>        2.parseFloat()<br>        3.Number()<br>        三者的区别：<br>            1.当字符串是整数 三者没有区别<br>            2.当字符串是小数  parseInt取整（干掉小数）   parseFloat与Number保留小数<br>            3.当字符串包含字母<br>                1.字母在后面： parseFloat保留小数   Number：NaN<br>                2.字母在前面： 三者结果都是NaN<br>    2.隐式类型转换：<br>        1.str-0;<br>        2.str<em>1<br>        3.str/1<br>        4.+str ！！！<br>        5.-str<br>*</em>转换布尔类型**<br>    1.强制类型转换<br>        1.Boolean()<br>    2.隐式类型转换：<br>        !!<br>    转换为false的情况：  0  null  undefined  NaN “”  false<br>    剩下的全是true</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
